{"remainingRequest":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/oriol/Documents/tecnolord/inhospit/inhospit-web/src/components/ContaEndarrere.vue?vue&type=style&index=0&id=47882ffc&scoped=true&lang=css&","dependencies":[{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/src/components/ContaEndarrere.vue","mtime":1655990942117},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJkZHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogMzMzOwogIHRvcDogLTIwcHg7CiAgLyogSU1QT1JUQU5URSAqLwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB3aWR0aDogMTA1JTsKICBwYWRkaW5nLXRvcDogMS41cmVtOwogIHotaW5kZXg6IDE7Cn0K"},{"version":3,"sources":["ContaEndarrere.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContaEndarrere.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"cardd bg-groc row\">          \n    <div class=\"col-sm-12\">\n      <div class=\"contadorText\">\n        <h2>\n          <span id=\"days\">{{this.dies}} dies, </span>  \n          <span id=\"hours\">{{this.hores}} hores, </span>  \n          <span id=\"minutes\">{{this.minuts}} minuts, </span>  \n          <span id=\"seconds\">{{this.segons}} segons</span> \n        </h2>\n      </div>\n    </div>\n  </div>\n    \n</template>\n\n\n<script>\n    const DATE_TARGET = new Date('07/16/2022 16:01');\n\n    const MILLISECONDS_OF_A_SECOND = 1000;\n    const MILLISECONDS_OF_A_MINUTE = MILLISECONDS_OF_A_SECOND * 60;\n    const MILLISECONDS_OF_A_HOUR = MILLISECONDS_OF_A_MINUTE * 60;\n    const MILLISECONDS_OF_A_DAY = MILLISECONDS_OF_A_HOUR * 24\n    export default {\n        name: 'CountDown',\n        props: {\n            seconds: {\n                type: Number,\n                required: true\n            }\n        },\n        data () {\n            return {\n                dies: null,\n                hores: null,\n                minuts: null,\n                segons: null,\n            }\n        },\n        methods: {\n            updateCountdown() {\n\n              // Calcs\n              var NOW = new Date()\n              var DURATION = DATE_TARGET - NOW;\n              var REMAINING_DAYS = Math.floor(DURATION / MILLISECONDS_OF_A_DAY);\n              var REMAINING_HOURS = Math.floor((DURATION % MILLISECONDS_OF_A_DAY) / MILLISECONDS_OF_A_HOUR);\n              var REMAINING_MINUTES = Math.floor((DURATION % MILLISECONDS_OF_A_HOUR) / MILLISECONDS_OF_A_MINUTE);\n              var REMAINING_SECONDS = Math.floor((DURATION % MILLISECONDS_OF_A_MINUTE) / MILLISECONDS_OF_A_SECOND);\n              \n              this.dies = REMAINING_DAYS;\n              this.hores = REMAINING_HOURS;\n              this.minuts = REMAINING_MINUTES;\n              this.segons = REMAINING_SECONDS;\n          },\n        },\n        mounted () {\n            this.updateCountdown()\n        },\n        beforeMount() {\n          \n          setInterval(() => {\n            this.updateCountdown()\n          }, 1000)\n        }\n    }\n</script>\n\n<style scoped>\n.cardd{\n  position: absolute;\n  z-index: 333;\n  top: -20px;\n  /* IMPORTANTE */\n  text-align: center;\n  width: 105%;\n  padding-top: 1.5rem;\n  z-index: 1;\n}\n</style>\n"]}]}