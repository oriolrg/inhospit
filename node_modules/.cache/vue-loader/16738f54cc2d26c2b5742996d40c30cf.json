{"remainingRequest":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/oriol/Documents/tecnolord/inhospit/inhospit-web/src/components/Portfolio.vue?vue&type=template&id=a9a7cd70&scoped=true&","dependencies":[{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/src/components/Portfolio.vue","mtime":1645126518000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/oriol/Documents/tecnolord/inhospit/inhospit-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}